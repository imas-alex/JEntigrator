package gdt.data.entity;
/*
 * Copyright 2016 Alexander Imas
 * This file is part of JEntigrator.

    JEntigrator is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    JEntigrator is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with JEntigrator.  If not, see <http://www.gnu.org/licenses/>.
 */

import java.util.Properties;
import java.util.logging.Logger;
import gdt.data.entity.EntityHandler;
import gdt.data.entity.FacetHandler;
import gdt.data.grain.Locator;
import gdt.data.grain.Sack;
import gdt.data.store.Entigrator;
/**
* Contains methods to process a fields entity.
* @author  Alexander Imas
* @version 1.0
* @since   2016-03-11
*/
public class BondDetailHandler extends FacetHandler{
private Logger LOGGER=Logger.getLogger(BondDetailHandler.class.getName());
public static final String EXTENSION_KEY="_Tm142C8Sgti2iAKlDEcEXT2Kj1E";
public final static String BOND_DETAIL="bond detail";
	public BondDetailHandler(){
		
	}
	/**
	 * Check if the fields handler is applied to the entity  
	 *  @param entigrator entigrator instance
	 *  @param locator$ entity's locator 
	 * @return true if applied false otherwise.
	 */	
	@Override
	public boolean isApplied(Entigrator entigrator, String locator$) {
		try{
			//System.out.println("FieldsHandler:isApplied:locator="+locator$);
			Properties locator=Locator.toProperties(locator$);
			String entityKey$=locator.getProperty(EntityHandler.ENTITY_KEY);
			Sack entity=entigrator.getEntityAtKey(entityKey$);
			boolean result=false;
			if(entity.getElementItemAt("fhandler", BondDetailHandler.class.getName())!=null)
				return true;
			else
				return false;
		}catch(Exception e){
		LOGGER.severe(e.toString());
	     return false;
		}
	
	}
	 /**
     * Get title of the fields handler.  
     * @return the title of the fields handler..
     */	
	@Override
	public String getTitle() {
		return "Bond detail";
	}
	 /**
     * Get type of the fields handler.  
     * @return the type of the fields handler..
     */	
	@Override
	public String getType() {
		return "bond.detail";
	}
	 /**
     * Get class name of the fields handler.  
     * @return the class name of the fields handler..
     */	
	@Override
	public String getClassName() {
	 return	BondDetailHandler.class.getName();
	}

/**
 * Adapt the clone of the entity.  
 */	
@Override
public void adaptClone(Entigrator entigrator) {

}

/**
 * Adapt the the entity after rename.   
 */	
@Override
public void adaptRename(Entigrator entigrator) {

}
public static void deleteDetail(Entigrator entigrator, String locator$){
	try{
		
	}catch(Exception e){
		Logger.getLogger(BondDetailHandler.class.getName()).severe(e.toString());
	}
	
	
	
}
}